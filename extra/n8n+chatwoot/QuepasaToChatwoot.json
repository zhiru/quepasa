{
  "name": "QuepasaToChatwoot",
  "nodes": [
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            },
            {
              "name": "inbox_id",
              "value": "={{$json[\"extra\"][\"inbox\"]}}"
            },
            {
              "name": "contact_id",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Create a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        11120,
        -440
      ],
      "id": "f298b95a-045a-437e-a369-38a671315924",
      "retryOnFail": true,
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        11360,
        -440
      ],
      "id": "fc98c588-e5f5-41d7-bf7b-faaba57ec8ca"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json[\"extra\"][\"cwhost\"]}}/api/v1/accounts/{{$json[\"extra\"][\"account\"]}}/conversations/{{$json[\"conversation\"][\"id\"]}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json[\"extra\"][\"atoken\"]}}"
            }
          ]
        }
      },
      "name": "Open a Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        12160,
        -460
      ],
      "id": "5adac819-e66b-4a2a-b4c9-5e6a3e9234b6"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"chat\"][\"id\"].contains(\"@broadcast\") ?? true}}",
              "operation": "notEqual",
              "value2": true
            }
          ]
        }
      },
      "name": "Not Broadcast ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6420,
        -340
      ],
      "id": "72697f1d-f457-4d47-9248-3b8923722028"
    },
    {
      "parameters": {
        "mode": "multiplex"
      },
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        8880,
        60
      ],
      "id": "c1e9b772-02d2-455d-9968-03b90e1f5fab"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "to-chatwoot",
        "options": {}
      },
      "id": "2c0ab730-04c4-4ed6-bee6-a8fa1e1390c6",
      "name": "Webhook Chatwoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        6240,
        -340
      ],
      "webhookId": "f0d0e1da-e8cf-4956-8715-dccf5fe3c892"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "18b38fcc-80e3-4fea-a792-cb4ebbd684fc",
      "name": "Broadcast Message",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        6620,
        -220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.conversation?.id}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Should Create a New Conversation Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        10660,
        -283.21073188545233
      ],
      "alwaysOutputData": false,
      "id": "28d76dbf-72db-49f0-a789-a3e6f16a00f2"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.fromme == true}}"
            }
          ]
        }
      },
      "id": "98c812e5-19e9-45b1-a56e-202abbbd7656",
      "name": "Should Send Greetings ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        11220,
        -823.2107318854523
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_CHATWOOTTOQUEPASAGREETINGS'] ?? 1007 }}",
        "options": {}
      },
      "id": "1f5c22d9-579c-4085-adf2-fe12dd8ced4e",
      "name": "Throw To Greetings Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        11680,
        -823.2107318854523
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "eb5a4300-16af-4188-b699-14e61f23b14d",
      "name": "Wait For Create a Conversation",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        11460,
        -823.2107318854523
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] ?? 1003 }}",
        "options": {}
      },
      "id": "410d80fe-c240-4a37-8c63-03fb63533a9a",
      "name": "Throw To Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        15320,
        -480
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Getting and Filtering Conversations\n",
        "height": 616.1278921539156,
        "width": 2110.852343765206
      },
      "id": "aabb4a55-02d0-4a4b-835c-d9d10819cb00",
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8000,
        -83.21073188545233
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.chat.chatwoot.id}}"
            }
          ],
          "boolean": [
            {
              "name": "singlethread",
              "value": "={{ $json.extra.singlethread ?? /^true$/i.test($env[\"C8Q_SINGLETHREAD\"]) ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "id": "357126b1-78c3-4221-b018-4d71efdc56ef",
      "name": "Set Filter Conversation Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        8100,
        40
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "15ea511e-b582-4e7d-b5ab-d95f631cf15e",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        10460,
        -283.21073188545233
      ]
    },
    {
      "parameters": {},
      "id": "7d25c068-a8c6-497c-83bc-10025662b1f0",
      "name": "NoOp - Opening Conversation1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        10900,
        -440
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "c3a811f6-6780-4d96-bff1-7e427a29299a",
      "name": "Wait For Create a Conversation1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        11580,
        -320
      ]
    },
    {
      "parameters": {},
      "id": "8d386184-d94c-48ae-98f4-c191055c85a5",
      "name": "NoOp - Opening Conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        12800,
        -240
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "05115a45-9ce3-4681-9af6-aeb18de3f359",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        12540,
        -380
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.status",
              "value": "={{$json.payload.current_status}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Updated Conversation Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        12340,
        -480
      ],
      "id": "35e494cc-41a3-4d0c-97aa-b77cc2f37768"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_type",
              "value": "text"
            }
          ]
        },
        "options": {}
      },
      "name": "Payload Constants",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        15520,
        -240
      ],
      "id": "929eb1c5-5a57-4603-867f-860e15de3cdb"
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOCHATWOOT'] ?? 1006 }}",
        "options": {}
      },
      "id": "fbd49a9d-e7c0-4b16-afab-ad1b9545aae6",
      "name": "Execute Workflow Post To Chatwoot",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        15720,
        -240
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "content": "## Call Request ?",
        "height": 354.0653279804751,
        "width": 237.27247076935066
      },
      "id": "01a696a0-5b9a-4412-ba4c-a335731eed58",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        12960,
        -360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json.type}}",
              "operation": "equal",
              "value2": 8
            }
          ],
          "string": [
            {
              "value1": "={{$json.type}}",
              "value2": "call"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "3423bb24-fecd-401b-8436-8d16d8164cb5",
      "name": "If Call Request ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        13020,
        -243.21073188545233
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "text",
              "value": "=⚙ O usuário requisitou uma chamada de voz !\n____________________________________________________\n✉ {{ $json.status ?? $json.message }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "43c5b178-1b19-412d-a3b1-ee9a254d955a",
      "name": "Set Text Content For Call Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        13900,
        -440
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_POSTTOWEBCALLBACK'] ?? 1005 }}",
        "options": {}
      },
      "id": "318c82fb-4675-4720-a9e8-c427115aa840",
      "name": "Throw To WebCallBack Telephony Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        13480,
        -520
      ],
      "executeOnce": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e4737da4-b939-4237-993c-a1773af87c90",
      "name": "Set Increment For Conversations Attempts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        9420,
        220
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "8022429e-280a-4fad-9cc8-5090b97470ac",
      "name": "Wait a while (5s) For Conversation",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        9800,
        300
      ],
      "webhookId": "13d982e4-e253-4616-9e0a-3da472be5e56"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "conversation.id",
              "value": "={{$json.payload?.id}}"
            },
            {
              "name": "conversation.status",
              "value": "={{$json.payload?.status}}"
            }
          ]
        },
        "options": {}
      },
      "id": "5cf5f9b4-6172-4c60-a047-b5aae3ab57fb",
      "name": "Set Conversation Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        9960,
        40
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{$json.text}}"
            },
            {
              "name": "payload.message_type",
              "value": "={{$json.fromme?\"outgoing\":\"incoming\"}}"
            },
            {
              "name": "payload.source_id",
              "value": "={{$json.id}}"
            },
            {
              "name": "payload.content_attributes.items.quepasa.msgid",
              "value": "={{ $json.id }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.inreply ? +$json.inreply : undefined }}"
            },
            {
              "name": "attachment",
              "value": "={{$json.attachment}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chat.id}}"
            },
            {
              "name": "conversation",
              "value": "={{$json.conversation}}"
            },
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "hex",
              "value": "={{$json.chat.chatwoot.source_id}}"
            },
            {
              "name": "synopsis",
              "value": "={{$json.synopsis}}"
            },
            {
              "name": "participant.title",
              "value": "={{$json.participant?.title}}"
            },
            {
              "name": "payload.external_created_at",
              "value": "={{ new Date($json.timestamp).getTime() / 1000 }}"
            },
            {
              "name": "payload.event",
              "value": "={{ $json.type }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.private",
              "value": "={{ $json.payload?.private ?? false }}"
            },
            {
              "name": "payload.edited",
              "value": "={{ $json.edited ?? false }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Chatwoot Message Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        15320,
        -240
      ],
      "id": "a5b6fc06-5c43-4269-b324-eead5bf58486"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n display_id, \n status\nFROM conversations \nWHERE \n\taccount_id = '{{ $json.extra.account }}' \n\tAND inbox_id = '{{ $json.extra.inbox }}'\n\tAND contact_id = '{{ $json.contactid }}'\nORDER BY id DESC\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "15964d60-c9a2-49a1-b927-7a915f84c070",
      "name": "Get Last Conversation",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        8520,
        140
      ],
      "retryOnFail": false,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "jsCode": "const validStatus = [\"open\", \"resolved\", \"pending\", \"snoozed\"];\n\nreturn [{\n  payload: {\n    id: $input.first().json.display_id,\n    status: validStatus[$input.first().json.status]\n  }\n}];"
      },
      "id": "b76b8be1-a4ef-4c54-91b2-61158f265f4c",
      "name": "Rename Status Enum",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        8700,
        140
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.singlethread }}",
              "value2": true
            }
          ]
        }
      },
      "id": "ba5e339e-5a59-47ee-912c-e349c4307e22",
      "name": "If Single Thread ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        9060,
        60
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "operation": "larger",
              "value2": 2
            }
          ]
        }
      },
      "id": "e7fa4b63-12a0-4994-8db8-93690429eeb7",
      "name": "Max Attempts Reached ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        9600,
        220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.payload?.status }}",
              "operation": "notEqual",
              "value2": "resolved"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "89c9367e-a804-4e4d-8d64-535608d21fdc",
      "name": "If Not Resolved Conversation Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        9240,
        140
      ]
    },
    {
      "parameters": {},
      "id": "63a0dd74-801b-44f4-a63e-90e36c585c93",
      "name": "#region retries for conversation",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8340,
        40
      ]
    },
    {
      "parameters": {},
      "id": "c906c6bd-033a-49c6-a3c1-a35c013ae367",
      "name": "first found",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        9420,
        40
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "options": {}
      },
      "id": "ea457871-4657-478b-b495-67b454056abc",
      "name": "CleanUp Invalid Status",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        9800,
        140
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.13) Updates\n* extra parameter soc\n\n## Recommendations \n* Remember set timeout to 30 seconds",
        "height": 200.52521040961017,
        "width": 398.97654103837476
      },
      "id": "97661b0f-d79b-4d77-bb42-c99a3e1c4f1a",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6220,
        -580
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_GETCHATWOOTCONTACTS'] ?? 1002 }}",
        "options": {}
      },
      "id": "4b96bb79-6987-4e69-96ef-b897f1a9f761",
      "name": "Throw Get Chatwoot Contacts Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7360,
        -280
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.text ?? '' }}",
              "operation": "startsWith",
              "value2": "/invite"
            },
            {
              "value1": "={{ $json.text ?? '' }}",
              "operation": "startsWith",
              "value2": "//"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "8e4aa83c-500a-433f-933d-4eea690a1cbc",
      "name": "If Chat Command",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        15040,
        -360
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "bdb29915-ec9c-4ad3-914d-036d60733353",
      "name": "If Not In Reply",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        13280,
        -83.21073188545233
      ]
    },
    {
      "parameters": {},
      "id": "9890d01a-eeeb-4ac4-bc27-cc44abe08f35",
      "name": "Follow to Chatwoot",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        14800,
        -363.21073188545233
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=\nSELECT id AS inreply_internal_id\nFROM messages \nWHERE source_id = '{{ $json.inreply }}'\nLIMIT 1",
        "options": {}
      },
      "id": "45218bf7-8228-4e32-a568-86fe5751bd07",
      "name": "Get In Reply Reference Id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        13680,
        156.78926811454767
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "9447ca8e-e0d2-4e1d-9a7a-4f99d7b39b69",
      "name": "Merging Found Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        13920,
        -43.21073188545233
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "inreply",
              "value": "={{ $json.inreply_internal_id }}"
            },
            {
              "name": "synopsis",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c09c9818-fdb9-4f58-b867-f709c8c98a7a",
      "name": "Set1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        14300,
        -23.210731885452333
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply }}",
              "operation": "contains",
              "value2": "-"
            }
          ]
        }
      },
      "id": "babdd54e-2dcb-4b8f-a2ac-45416e9cc066",
      "name": "If Has Hiffen",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        13480,
        36.78926811454767
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "inreply_internal_id",
              "value": "={{ $json.inreply.split(/-/).pop() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ee691fa0-58cd-4c55-a6ca-b51b83e55db4",
      "name": "Set Internal Id",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        13680,
        16.789268114547667
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.inreply_internal_id }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "920afd3e-8e0d-4853-b9f2-6ce466a5e601",
      "name": "If Not Found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        14100,
        -43.21073188545233
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] ?? 1003 }}",
        "options": {}
      },
      "id": "59427297-7da6-4b06-89a4-08647a762959",
      "name": "Throw To Quepasa Chat Control Workflow1",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        7360,
        -500
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.chat.id }}",
              "value2": "system"
            }
          ]
        }
      },
      "id": "0c24ce6e-5dac-46e2-b9dc-6200f5ae8f7b",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7160,
        -380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.body.type }}",
              "operation": "notEqual",
              "value2": 10
            }
          ],
          "string": [
            {
              "value1": "={{ $json.body.type }}",
              "operation": "notEqual",
              "value2": "revoke"
            }
          ]
        }
      },
      "id": "2e35e702-a80a-4875-85b3-9f0fdf0657e3",
      "name": "If Not Revoked ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        6940,
        -360
      ]
    },
    {
      "parameters": {},
      "id": "3887d0f9-5d36-4e00-9293-3bf63b2edf08",
      "name": "(In) Revoked Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        8180,
        1000
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "revoked",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "322efd2c-539b-49c1-a012-93d5c1a4bad3",
      "name": "Set Retrieved Chatwoot Revoked Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        9000,
        800
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "fa11d404-bd6c-4f87-b1ba-5b6b347d2a4d",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        9320,
        980
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $json.extra.cwhost }}/api/v1/accounts/{{ $json.revoked.account_id }}/conversations/{{ $json.revoked.conversation_id }}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n   \"private\": false,\n   \"content\": \"❌ Essa mensagem foi apagada !\",\n   \"message_type\": 2,\n   \"content_attributes\": {      \n      \"in_reply_to\": {{ +$json.revoked.id }},\n      \"in_reply_to_external_id\": \"{{ $json.body.id }}\"\n   },\n   \"content_type\": \"text\"\n}",
        "headerParametersJson": "={ \"api_access_token\": \"{{ $json.body.extra.atoken }}\" }"
      },
      "name": "Send Revoked Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        9540,
        980
      ],
      "id": "f99d96cc-c113-4c9b-882b-b4b5d976d688",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "content": "## Message Revoked From Source\n\n",
        "height": 511.52099560219085,
        "width": 1735.9412743995279
      },
      "id": "18ca4991-c103-457c-a7a6-4f34659fab9a",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        8000,
        640
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT messages.account_id, conversations.display_id as conversation_id, messages.id\nFROM messages INNER JOIN conversations \nON messages.conversation_id = conversations.id\nWHERE messages.account_id = '{{ $json.body.extra.account }}' AND messages.source_id = '{{ $json.body.id }}';",
        "options": {}
      },
      "id": "ac24beed-702b-4e3b-bdea-6985eb9e854d",
      "name": "Get Revoked Message Info",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        8780,
        920
      ],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{  $json.body.id }}",
              "operation": "contains",
              "value2": "-"
            }
          ]
        }
      },
      "id": "01133e25-ab8d-4949-9b7d-a10609640dd1",
      "name": "If Sended By Chatwoot",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        8380,
        900
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT messages.account_id, conversations.display_id as conversation_id, messages.id\nFROM messages INNER JOIN conversations \nON messages.conversation_id = conversations.id\nWHERE messages.account_id = '{{ $json.body.extra.account }}' AND messages.id = '{{ $json.internalid }}';",
        "options": {}
      },
      "id": "206e5a0d-80bc-4843-baf1-2bdbd9495dcd",
      "name": "Get Revoked Internal Message Info",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        8780,
        680
      ],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function isNumeric(str) {\n  if (typeof str != \"string\") return false;\n  return !isNaN(str) && !isNaN(parseFloat(str));\n}\nconst splitted = $input.item.json.body.id.split(/-/);\nlet internalid = splitted.pop();\nif (!isNumeric(internalid)){\n  internalid = splitted[2];\n}\n\n$input.item.json.internalid = internalid;\nreturn $input.item;"
      },
      "id": "d0314adc-b780-4e2c-8614-a363053d4d60",
      "name": "Get Internal Id",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        8580,
        780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "e4177ea6-0d86-4aa4-aec9-a3b58ef4a1f3",
      "name": "If Success To Get Contact",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        7540,
        -280
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.cwhost",
              "value": "={{ $json.extra.cwhost ?? \"http://127.0.0.1:3000\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "32b3f039-dd25-4073-86d4-bf1a101fa173",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        6780,
        -360
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{ $json.extra ?? $json.body.extra }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6212abc7-c4d2-4538-8e4f-7be0b6791b39",
      "name": "Extra",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        6620,
        -360
      ]
    },
    {
      "parameters": {},
      "id": "afe9aa55-b0f3-4dbe-965a-33b3ee0f23e5",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        13280,
        -420
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "5ceb702d-6ae2-4117-9355-634016438870",
      "name": "Merge4",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        13680,
        -440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "f0bf29cd-f9a3-4ad3-b4a7-bfd3ce4b255c",
              "leftValue": "={{$json.conversation.status}}",
              "rightValue": "=open",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d78705fc-13ea-4df9-a36b-735b1a199be4",
      "name": "Conversation Is Not Open ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        11780,
        -260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "915f6870-811a-493e-b1c8-2631f16463c3",
              "leftValue": "={{ $json.extra.soc }}",
              "rightValue": "=",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "680dd644-57ca-4729-8d80-a24c830584f8",
              "leftValue": "={{ $json.extra.soc }}",
              "rightValue": "=",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "ignoreCase": true,
          "looseTypeValidation": true
        }
      },
      "id": "8661f392-7862-4389-a2ba-5c14c931d30e",
      "name": "Should Open Conversation ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        11980,
        -360
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Create a Conversation": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open a Conversation": {
      "main": [
        [
          {
            "node": "Set Updated Conversation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not Broadcast ?": {
      "main": [
        [
          {
            "node": "Extra",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Broadcast Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook Chatwoot": {
      "main": [
        [
          {
            "node": "Not Broadcast ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Send Greetings ?": {
      "main": [
        [
          {
            "node": "Wait For Create a Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation": {
      "main": [
        [
          {
            "node": "Throw To Greetings Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Filter Conversation Parameters": {
      "main": [
        [
          {
            "node": "#region retries for conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Should Create a New Conversation Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation1": {
      "main": [
        [
          {
            "node": "Create a Conversation",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should Send Greetings ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait For Create a Conversation1": {
      "main": [
        [
          {
            "node": "Conversation Is Not Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp - Opening Conversation": {
      "main": [
        [
          {
            "node": "If Call Request ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Updated Conversation Status": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Constants": {
      "main": [
        [
          {
            "node": "Execute Workflow Post To Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Call Request ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not In Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Conversations Attempts": {
      "main": [
        [
          {
            "node": "Max Attempts Reached ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "If Single Thread ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot Message Payload": {
      "main": [
        [
          {
            "node": "Payload Constants",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last Conversation": {
      "main": [
        [
          {
            "node": "Rename Status Enum",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Rename Status Enum": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Set Conversation Payload": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Single Thread ?": {
      "main": [
        [
          {
            "node": "first found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not Resolved Conversation Found ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Create a New Conversation Thread ?": {
      "main": [
        [
          {
            "node": "NoOp - Opening Conversation1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait For Create a Conversation1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Conversation Is Not Open ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait a while (5s) For Conversation": {
      "main": [
        [
          {
            "node": "#region retries for conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Max Attempts Reached ?": {
      "main": [
        [
          {
            "node": "CleanUp Invalid Status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait a while (5s) For Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Resolved Conversation Found ?": {
      "main": [
        [
          {
            "node": "first found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Increment For Conversations Attempts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "#region retries for conversation": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Last Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "first found": {
      "main": [
        [
          {
            "node": "Set Conversation Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CleanUp Invalid Status": {
      "main": [
        [
          {
            "node": "Set Conversation Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw Get Chatwoot Contacts Workflow": {
      "main": [
        [
          {
            "node": "If Success To Get Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Command": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chatwoot Message Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not In Reply": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Has Hiffen",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Follow to Chatwoot": {
      "main": [
        [
          {
            "node": "If Chat Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get In Reply Reference Id": {
      "main": [
        [
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merging Found Id": {
      "main": [
        [
          {
            "node": "If Not Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Hiffen": {
      "main": [
        [
          {
            "node": "Set Internal Id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get In Reply Reference Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Internal Id": {
      "main": [
        [
          {
            "node": "Merging Found Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Not Found": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set1": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Chat Control Workflow1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Throw Get Chatwoot Contacts Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Revoked ?": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "(In) Revoked Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Revoked Message": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          },
          {
            "node": "If Sended By Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Retrieved Chatwoot Revoked Info": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Send Revoked Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Revoked Message Info": {
      "main": [
        [
          {
            "node": "Set Retrieved Chatwoot Revoked Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Sended By Chatwoot": {
      "main": [
        [
          {
            "node": "Get Internal Id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Revoked Message Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Revoked Internal Message Info": {
      "main": [
        [
          {
            "node": "Set Retrieved Chatwoot Revoked Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Internal Id": {
      "main": [
        [
          {
            "node": "Get Revoked Internal Message Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Success To Get Contact": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Filter Conversation Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "If Not Revoked ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extra": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw To WebCallBack Telephony Workflow": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Text Content For Call Request": {
      "main": [
        [
          {
            "node": "Follow to Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Throw To WebCallBack Telephony Workflow",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "Set Text Content For Call Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Is Not Open ?": {
      "main": [
        [
          {
            "node": "Should Open Conversation ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Open Conversation ?": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Open a Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp - Opening Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 30,
    "executionOrder": "v1"
  },
  "versionId": "2c97dfdb-5f5b-4452-a1dd-16bfa452169c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "id": "1009",
  "tags": [
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    },
    {
      "createdAt": "2022-10-13T15:26:19.857Z",
      "updatedAt": "2023-08-24T21:01:00.296Z",
      "id": "6",
      "name": "chatwoot"
    }
  ]
}