{
  "name": "GetChatwootContacts",
  "nodes": [
    {
      "parameters": {
        "baseUrl": "={{$json[\"extra\"][\"cwhost\"]}}",
        "accessToken": "={{$json[\"extra\"][\"utoken\"]}}",
        "resource": "contact",
        "accountId": "={{$json[\"extra\"][\"account\"]}}",
        "sourceId": "={{$json[\"chat\"][\"hex\"]}}",
        "operation": "contactCreate",
        "contactIdentifier": "={{$json[\"chat\"][\"id\"]}}",
        "name": "={{$json[\"chat\"][\"title\"]}}"
      },
      "id": "e61d0428-a65c-468f-9a5b-50efd60d6f85",
      "name": "Create Chat Contact",
      "type": "n8n-nodes-chatwoot.chatwoot",
      "typeVersion": 1,
      "position": [
        3720,
        -140
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.participant}}"
            }
          ]
        },
        "options": {}
      },
      "id": "0ca19ab0-a14e-4829-90a5-81a1aa367035",
      "name": "Clearing Payload For Contacts",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1040,
        -240
      ]
    },
    {
      "parameters": {
        "jsCode": "function a2hex(str) {\n  var arr = [];\n  for (var i = 0, l = str.length; i < l; i ++) {\n    var hex = Number(str.charCodeAt(i)).toString(16);\n    arr.push(hex);\n  }\n  return arr.join('');\n}\n\nfor (const item of $input.all()) {\n  let body = item.json;\n  if(body){\n    \n    // Covering participant id\n    if(body.participant){\n\n      if(!body.participant.id || body.participant.id.length == 0)\n      {\n        delete body.participant;\n      } \n      else {\n        body.participant.phone = \"+\" + body.participant.id.split('@').shift();\n        body.participant.hex = a2hex(body.participant.id);\n      }\n    }\n\n    // Covering chat id\n    if(body.chat.id){\n      if(!body.chat.id.endsWith('@g.us')){\n        body.chat.phone = \"+\" + body.chat.id.split('@').shift();\n      } else {\n        // adding contact suffix\n        if(body.chat.title){\n          if(!body.chat.title.endsWith('(GROUP)')) {\n            body.chat.title = body.chat.title + ' (GROUP)'\n          }\n        } else {\n          body.chat.title = 'UNKNOWN (GROUP)'\n        }\n      }\n      body.chat.hex = a2hex(body.chat.id);\n    }\n  }\n}\nreturn $input.all();"
      },
      "id": "999b09b5-e4c2-498f-bc3c-cb2d71c8af72",
      "name": "Cover Ids & Set Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1240,
        -240
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "extra",
              "value": "={{$json.body.extra}}"
            },
            {
              "name": "chat",
              "value": "={{$json.body.chat}}"
            },
            {
              "name": "participant",
              "value": "={{$json.body.participant}}"
            },
            {
              "name": "id",
              "value": "={{$json.body.id}}"
            },
            {
              "name": "timestamp",
              "value": "={{$json.body.timestamp}}"
            },
            {
              "name": "text",
              "value": "={{$json.body.text}}"
            },
            {
              "name": "inreply",
              "value": "={{$json.body.inreply}}"
            },
            {
              "name": "attachment",
              "value": "={{$json.body.attachment}}"
            }
          ],
          "number": [
            {
              "name": "type",
              "value": "={{$json.body.type}}"
            }
          ],
          "boolean": [
            {
              "name": "fromme",
              "value": "={{$json.body.fromme}}"
            }
          ]
        },
        "options": {}
      },
      "id": "28da6748-a03a-49b2-ac9a-9203b1f131fc",
      "name": "Clearing Payload For Workflow",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        840,
        -320
      ]
    },
    {
      "parameters": {
        "errorMessage": "chat not processed "
      },
      "id": "7c019522-9df4-4a74-95ea-e4614c6e8d5c",
      "name": "Stop And Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4720,
        -220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload?.id}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "c192b4fa-faa2-4b80-8e67-c46219e4c123",
      "name": "If Chat Contact Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3340,
        -300
      ]
    },
    {
      "parameters": {
        "content": "## Chat Contact\n",
        "height": 770.5363743991675,
        "width": 3390.946354395323
      },
      "id": "4f66fe31-7400-4bc7-81a5-2c373e0e6aaa",
      "name": "Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1600,
        -460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json?.chat}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "fac2f5bd-5021-4667-b1f5-95b17481c1e3",
      "name": "If Chat Exists ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4500,
        -380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "06523944-3049-4fd4-a8c3-933dc46ccdc3",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4100,
        -200
      ]
    },
    {
      "parameters": {
        "amount": "={{ (Math.random() * 5) + 1 }}",
        "unit": "seconds"
      },
      "id": "ae3087c5-2d2e-474e-8060-bb9a5aeb40fd",
      "name": "Wait a while (5s)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        4500,
        -120
      ],
      "webhookId": "57209d6b-e7a6-4d78-b55c-82f677b13d42"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{$json.chat.hex}}"
            },
            {
              "name": "chat.chatwoot.skipgreetings",
              "value": "={{ $json.payload.custom_attributes?.skipgreetings ?? false }}"
            },
            {
              "name": "payload",
              "value": "={{ undefined }}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{$json.payload.id}}"
            },
            {
              "name": "attempts",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set SourceId and PayloadId",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3520,
        -380
      ],
      "id": "97926abf-33b0-428e-bf6f-309150109677"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "chat.chatwoot.source_id",
              "value": "={{ $json.payload.contact_inbox.source_id ?? undefined }}"
            },
            {
              "name": "payload",
              "value": "={{ undefined }}"
            }
          ],
          "number": [
            {
              "name": "chat.chatwoot.id",
              "value": "={{ $json.payload.contact.id }}"
            },
            {
              "name": "attempts",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Created Chat Contact Info",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        4300,
        -280
      ],
      "id": "92bcd719-3b08-4049-bdb0-0fb9dfa43f17"
    },
    {
      "parameters": {
        "errorMessage": "Error on create contact (expected 422)"
      },
      "id": "823e8d62-0030-4035-8e56-091b6492250c",
      "name": "! Unknown Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        4500,
        60
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "attempts",
              "value": "={{ ($json.attempts ?? 0) + 1 }}"
            }
          ]
        },
        "options": {}
      },
      "id": "39b7bfba-7006-459c-ac97-aebefd0ceac5",
      "name": "Set Increment For Chat Contact Attempt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1700,
        -300
      ]
    },
    {
      "parameters": {},
      "id": "2910ad5d-2e85-42e7-a9de-dca3cf593567",
      "name": "Retry To Chat Contact",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4720,
        60
      ]
    },
    {
      "parameters": {
        "values": {
          "number": [
            {
              "name": "payload.id",
              "value": "={{ $json.ctid }}"
            }
          ],
          "boolean": [
            {
              "name": "payload.custom_attributes.skipgreetings",
              "value": "={{ $json.ctatts?.skipgreetings ?? false }}"
            }
          ],
          "string": [
            {
              "name": "ctid",
              "value": "={{ undefined }}"
            },
            {
              "name": "ctatts",
              "value": "={{ undefined }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set ContactId Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        3140,
        -300
      ],
      "id": "bdd5f78c-39b2-48ad-a58c-e54ada812375"
    },
    {
      "parameters": {
        "content": "## (1.0.4) Updates\n* limit and phone validator\n\n## Recommendations \n* Remember set timeout to 20 seconds",
        "height": 201.45401153644474,
        "width": 467.54452018877896
      },
      "id": "b20bb1e1-0739-4d97-8141-ab52a7832a9f",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        640,
        -580
      ]
    },
    {
      "parameters": {},
      "id": "7f1c1530-39b3-4115-89ad-8eccfbdc20ed",
      "name": "When Called By Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        660,
        -320
      ]
    },
    {
      "parameters": {},
      "id": "3e744323-b1c8-4f03-b57e-3c8c6140c34a",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3520,
        -220
      ]
    },
    {
      "parameters": {},
      "id": "6e17e1bc-1711-48e4-ae62-5e7bfd5c84bc",
      "name": "Return Payload",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4720,
        -400
      ],
      "alwaysOutputData": true,
      "continueOnFail": true
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "090a963c-e931-42e8-a7bb-b2dffc4c7ad8",
      "name": "Parameters + Contacts",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        1440,
        -300
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "7ace0dc7-1341-4125-94c2-9901124f29af",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3920,
        -200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error ?? \"\" }}",
              "operation": "contains",
              "value2": "could not be processed"
            }
          ],
          "number": [
            {
              "value1": "={{ $json.attempts ?? 0 }}",
              "value2": 2
            }
          ]
        }
      },
      "id": "f77dcec2-cdee-4350-98fe-0f388a06388d",
      "name": "If Error 422 & Has Attempts Remaning ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        4300,
        -100
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT id as ctid, custom_attributes as ctatts FROM contacts WHERE account_id = '{{ $json.extra.account }}' AND identifier = '{{ $json.chat.id }}'",
        "additionalFields": {}
      },
      "id": "23a1d175-e956-4f48-a3f0-a9ef598c41e0",
      "name": "Get Contact Data By Identifier",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1860,
        -200
      ],
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "maxTries": 2,
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT id as ctid, custom_attributes as ctatts FROM contacts WHERE account_id = '{{ $json.extra.account }}' AND phone_number = '{{ $json.chat.phone }}' limit 1",
        "additionalFields": {}
      },
      "id": "9a0f018c-22a0-4560-93e1-577f8bdaf2da",
      "name": "Get Contact Data By Phone",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        2600,
        -120
      ],
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "alwaysOutputData": true,
      "maxTries": 2,
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.ctid }}",
              "operation": "isNotEmpty"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "95a77279-feef-4314-94e1-4fdb4c09bf2c",
      "name": "If Identifier Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2220,
        -280
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "3c471025-24f8-4282-89d2-e6d11f73ca76",
      "name": "Merge Extra With Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2040,
        -280
      ],
      "notesInFlow": false
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "dd7ee04e-2a80-4e6d-8fe2-b2d76ad8a206",
      "name": "Merge Extra With Phone",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2780,
        -180
      ],
      "notesInFlow": false
    },
    {
      "parameters": {},
      "id": "b7724cd2-efe5-4ea1-9477-3c3e9b53802a",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2960,
        -240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.chat.phone }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "0483410d-ff9b-45e8-bc60-90f17ab612ee",
      "name": "If Has No Phone ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2420,
        -220
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Create Chat Contact": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Clearing Payload For Contacts": {
      "main": [
        [
          {
            "node": "Cover Ids & Set Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cover Ids & Set Phone": {
      "main": [
        [
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Clearing Payload For Workflow": {
      "main": [
        [
          {
            "node": "Clearing Payload For Contacts",
            "type": "main",
            "index": 0
          },
          {
            "node": "Parameters + Contacts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Contact Exists": {
      "main": [
        [
          {
            "node": "Set SourceId and PayloadId",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Chat Exists ?": {
      "main": [
        [
          {
            "node": "Return Payload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop And Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "Set Created Chat Contact Info",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Error 422 & Has Attempts Remaning ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set SourceId and PayloadId": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Created Chat Contact Info": {
      "main": [
        [
          {
            "node": "If Chat Exists ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait a while (5s)": {
      "main": [
        [
          {
            "node": "Retry To Chat Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Increment For Chat Contact Attempt": {
      "main": [
        [
          {
            "node": "Merge Extra With Id",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Contact Data By Identifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry To Chat Contact": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set ContactId Payload": {
      "main": [
        [
          {
            "node": "If Chat Contact Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Called By Another Workflow": {
      "main": [
        [
          {
            "node": "Clearing Payload For Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Create Chat Contact",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parameters + Contacts": {
      "main": [
        [
          {
            "node": "Set Increment For Chat Contact Attempt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Error 422 & Has Attempts Remaning ?": {
      "main": [
        [
          {
            "node": "Wait a while (5s)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "! Unknown Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Contact Data By Identifier": {
      "main": [
        [
          {
            "node": "Merge Extra With Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Contact Data By Phone": {
      "main": [
        [
          {
            "node": "Merge Extra With Phone",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If Identifier Found ?": {
      "main": [
        [
          {
            "node": "Set ContactId Payload",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Has No Phone ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Extra With Id": {
      "main": [
        [
          {
            "node": "If Identifier Found ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Extra With Phone": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Set ContactId Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has No Phone ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Extra With Phone",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Contact Data By Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 30
  },
  "versionId": "dcb14ac4-d7e4-4f20-880d-14b5dc70c415",
  "id": "1002",
  "meta": {
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "tags": []
}