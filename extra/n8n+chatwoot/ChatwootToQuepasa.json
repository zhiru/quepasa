{
  "name": "ChatwootToQuepasa",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "from-chatwoot",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "From ChatWoot",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -4300,
        3120
      ],
      "webhookId": "ae8993fc-1ab0-4de5-90ce-0eb59a2b5c7d",
      "id": "da314c87-ceba-4ca5-bc00-d1ae113f6856"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "={{ $json.payload.sender ? '*' + $json.payload.sender.trim() + '*: ' : '' }}{{ $json.payload.content }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Update Content With Sender Name",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -140,
        2600
      ],
      "id": "587e7645-9005-47b3-aaeb-a925f2fbfcc0"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Not Message Created Event !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -2520,
        5160
      ],
      "id": "989ed641-8089-4b72-be92-aef69727e189"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "only for outbound messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Is Incoming !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1840,
        3000
      ],
      "id": "17a8eda9-ead5-4998-b5ec-51fab2febdc4"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding private messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Is Private !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1580,
        3000
      ],
      "id": "e3eaa384-1ec8-40b7-a4bc-fe2f34b76f29"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "do not forwarding bot messages",
        "options": {
          "responseCode": 200
        }
      },
      "name": "From Customer !",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -1320,
        3000
      ],
      "id": "cac44382-8239-42e0-b7d8-d20855383010"
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_created"
            },
            {
              "value2": "conversation_status_changed",
              "output": 1
            },
            {
              "value2": "conversation_created",
              "output": 2
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -3960,
        3120
      ],
      "id": "fb36c998-7e40-42d0-950c-d4aeb3286737"
    },
    {
      "parameters": {},
      "name": "Message Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2480,
        2760
      ],
      "id": "5f8499d1-a518-433a-b80e-49bf372f134a"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "82d21f40-f188-4299-8f4c-734534031ed0",
      "name": "Text Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -760,
        2720
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Created Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2880,
        4180
      ],
      "id": "272dea24-fd98-4646-b7d4-18ae64e55712"
    },
    {
      "parameters": {
        "baseUrl": "={{$json.query.qphost}}",
        "token": "={{$json.query.qptoken}}",
        "messageId": "={{ $json.query.account }}-{{ $json.query.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "text": "={{$json.payload.content}}",
        "chatId": "={{$json.payload.chatid}}",
        "trackId": "chatwoot"
      },
      "id": "39bd22bf-be16-43f9-8544-69be821baa2a",
      "name": "Quepasa Send Text",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        940,
        2820
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "baseUrl": "={{$json.query.qphost}}",
        "token": "={{$json.query.qptoken}}",
        "messageId": "={{ $json.query.account }}-{{ $json.query.inbox }}-{{ $json.payload.messageid ?? Math.random() }}",
        "method": "sendurl",
        "text": "={{$json.payload.content}}",
        "chatId": "={{$json.payload.chatid}}",
        "url": "={{$json.payload.attachment}}",
        "trackId": "chatwoot"
      },
      "id": "5cfac53c-00dd-406a-90a7-ebf61a1ba2ea",
      "name": "Quepasa Send Attach",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        940,
        3060
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "4b39b16d-8927-4de1-85ec-a15ec11c0bd1",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        120,
        2220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.attachment}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Text Only ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        660,
        2940
      ],
      "id": "7ad835e2-d6c7-4f6b-97d7-6cd56bc18b4c"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {
          "responseCode": 200
        }
      },
      "name": "Normal Exit (RAS)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1220,
        2940
      ],
      "id": "953b3a40-38d8-4fa1-b260-e04a1647bfd9"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"message_type\"]}}",
              "value2": "outgoing"
            }
          ],
          "number": [
            {
              "value1": "={{$json[\"body\"][\"message_type\"]}}",
              "operation": "equal",
              "value2": 1
            }
          ]
        },
        "combineOperation": "any"
      },
      "name": "Is Outgoing Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2100,
        2760
      ],
      "id": "c22b9e46-6de2-482c-8440-855da6a501bb"
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "78993fe5-e22f-4b96-b48c-a930f0241d83",
      "name": "Normal Exit (GNE)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -2200,
        4200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json[\"body\"][\"private\"]}}"
            }
          ]
        }
      },
      "name": "Is Public ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1840,
        2740
      ],
      "id": "89c54175-3017-4d32-bbb1-59ff8ec3b520"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"type\"]}}",
              "operation": "notEqual",
              "value2": "agent_bot"
            },
            {
              "value1": "={{$json[\"body\"][\"sender\"][\"name\"]?.toLowerCase()}}",
              "operation": "notContains",
              "value2": "whatsapp outgoing"
            }
          ]
        }
      },
      "name": "Is Not From Sincronize Bot?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1580,
        2720
      ],
      "id": "fd572d61-2ef9-4757-9323-dc4d66276ee8"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "startsWith",
              "value2": "/invite"
            }
          ]
        }
      },
      "id": "d94c3baa-7699-45e3-9057-299032074eb6",
      "name": "If Control Message",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -460,
        2580
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASACHATCONTROL'] }}"
      },
      "id": "1229f01c-253a-4479-9f37-00739fc05dfa",
      "name": "Quepasa Chat Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -140,
        2220
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"body\"][\"messages\"][0][\"sender_type\"]}}",
              "value2": "User"
            }
          ]
        }
      },
      "id": "2c2db2bc-31e1-4176-a59b-4582807de762",
      "name": "Sent by agent ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2600,
        4180
      ],
      "notesInFlow": true,
      "notes": "Quando vem vazio é porque a conversa foi criada sem mensagem, no caso criado pelo fluxo. ou seja, criada pelo cliente."
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.query.cwhost}} }}/api/v1/accounts/{{$json.query.account}}/conversations/{{$json.body.id}}/toggle_status",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "status",
              "value": "open"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{$json.query.utoken}}"
            }
          ]
        }
      },
      "name": "Open Conversation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -2400,
        4100
      ],
      "id": "9aefb56c-0cb6-46d1-a325-9527e6d826ad",
      "continueOnFail": true,
      "notes": "Important to use \"source_id\" to respond messages"
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_QUEPASAINBOXCONTROL'] }}"
      },
      "id": "6092cfce-a7bb-428e-a5ae-d5e7d2d8fc11",
      "name": "Throw To Quepasa Inbox Control Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -1000,
        2480
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"body\"][\"event\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "message_updated"
            }
          ]
        },
        "fallbackOutput": 3
      },
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -3080,
        4880
      ],
      "id": "caa081cf-0299-4d6a-9335-dd0cf27ca311"
    },
    {
      "parameters": {},
      "id": "519dd1c7-d45b-44c0-b99a-333fac38726a",
      "name": "Message Update Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2480,
        4580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.body?.content_attributes?.deleted??false}}",
              "value2": true
            }
          ]
        }
      },
      "id": "3ea03bce-63ff-4b85-81f6-ee69ee532fe7",
      "name": "If Deleted ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2260,
        4580
      ]
    },
    {
      "parameters": {},
      "id": "4d01d6c1-b031-477b-a3f5-21d4e6ac70a8",
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2000,
        4520
      ]
    },
    {
      "parameters": {},
      "id": "f97aa13d-b31c-4ced-884c-aa8ae051d503",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        660,
        2720
      ]
    },
    {
      "parameters": {},
      "id": "32ef4cc0-eb89-4886-99a4-c890a2d638d7",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        160,
        2740
      ]
    },
    {
      "parameters": {
        "content": "## POSTING THROW QUEPASA\n",
        "height": 701.60213414902,
        "width": 1034.409491520598
      },
      "id": "2f9c730d-138d-40af-9979-954084ff731b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        2580.4240879460162
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "query.qptoken",
              "value": "={{ $json.query.qptoken ?? $json.query.identifier }}"
            },
            {
              "name": "query.qphost",
              "value": "={{ $json.query.qphost ?? 'http://127.0.0.1:31000' }}"
            },
            {
              "name": "query.cwhost",
              "value": "={{ $json.query.cwhost ?? 'http://127.0.0.1:3000' }}"
            },
            {
              "name": "query.n8nhost",
              "value": "={{ $json.query.n8nhost ?? 'http://127.0.0.1:5678' }}"
            },
            {
              "name": "query.inbox",
              "value": "={{ $json.query.inbox ?? $json.body.inbox_id ?? $json.body.inbox?.id }}"
            },
            {
              "name": "query.account",
              "value": "={{ $json.query.account ?? $json.body.account_id ?? $json.body.account?.id ?? $json.body.messages[0]?.account_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "bc210433-7c78-41d6-b985-444d20febb9d",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -4120,
        3120
      ]
    },
    {
      "parameters": {
        "respondWith": "noData",
        "options": {}
      },
      "id": "feff344e-8201-457b-a3e1-978dbce8ef0c",
      "name": "Normal Exit (CUP)",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -2180,
        3880
      ]
    },
    {
      "parameters": {
        "workflowId": "={{ $env['C8Q_CHATWOOTPROFILEUPDATE'] }}"
      },
      "id": "30e9e9e0-dc66-410f-a036-dfb21dd446f1",
      "name": "Throw To Profile Update Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -2360,
        3880
      ],
      "continueOnFail": true
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.meta?.sender?.identifier ?? \"\" }}",
              "operation": "notEqual",
              "value2": "control@quepasa.io"
            }
          ]
        }
      },
      "id": "d55170df-de37-4cf3-a289-1dcffa2accb0",
      "name": "If Not Control",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2320,
        3440
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT csat_survey_enabled FROM inboxes WHERE id = {{ $json.query.inbox }}; ",
        "additionalFields": {}
      },
      "id": "d98a4a79-85a2-4f35-b3b8-7be0ddb3b64c",
      "name": "Enabled CSAT ?",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -940,
        3500
      ],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "985f7e59-cb86-43db-b685-5bbf365a9361",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -740,
        3440
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "48fb9c8a-f055-480e-8b65-ae25936c8f93",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -220,
        3400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.csat_survey_enabled }}",
              "value2": true
            }
          ]
        }
      },
      "id": "49ea99b8-ac89-49be-8b1e-dfd50b91f701",
      "name": "Use CSAT ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -580,
        3440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.status }}",
              "value2": "resolved"
            }
          ]
        }
      },
      "id": "ca8f9d7d-f2d0-498a-899c-1677a92c22db",
      "name": "If Conversation Resolved",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2500,
        3460
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "qphost",
              "value": "={{$json.query?.qphost}}"
            },
            {
              "name": "qptoken",
              "value": "={{$json.query?.qptoken}}"
            },
            {
              "name": "cwhost",
              "value": "={{$json.query?.cwhost}}"
            },
            {
              "name": "utoken",
              "value": "={{$json.query?.utoken}}"
            },
            {
              "name": "account",
              "value": "={{$json.query?.account}}"
            },
            {
              "name": "contactid",
              "value": "={{$json.body?.meta?.sender?.id}}"
            },
            {
              "name": "chatid",
              "value": "={{$json.chatid}}"
            }
          ]
        },
        "options": {}
      },
      "id": "7833af0d-798c-4a23-acd7-de7f0f4fbf0a",
      "name": "Set Update Contact Payload",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2540,
        3880
      ]
    },
    {
      "parameters": {},
      "name": "Conversation Status Changed  Event",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -3020,
        3680
      ],
      "id": "42112e7e-37e2-4efe-8613-b38431592244"
    },
    {
      "parameters": {
        "content": "## POST RESOLVED MESSAGE\n* to disable, remove that link",
        "height": 565.5824733063735,
        "width": 3071.1267498581306
      },
      "id": "a139fc83-4d5a-45fb-ac06-5633f2bd5a4e",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2760,
        3260
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT uuid FROM conversations WHERE account_id = {{ $json.query.account }} and display_id = {{ $json.body.id }};",
        "additionalFields": {}
      },
      "id": "9db21a24-d5d7-4273-9491-8c4cb2559a3e",
      "name": "Getting UUID",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -400,
        3320
      ],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "0d5e657a-34df-49a4-bdc8-4e32d10c78f1",
      "name": "Skip Evaluate By Conversation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1300,
        3300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            }
          ]
        }
      },
      "id": "febd8eb8-af82-4a8e-9e54-e32ff3077049",
      "name": "Skip Evaluate By Conversation Is Setted",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1460,
        3400
      ]
    },
    {
      "parameters": {},
      "id": "fecf4332-d6b0-466f-a5b5-ebc6504bfb31",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1100,
        3420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.hasOwnProperty('skipevaluation') }}",
              "value2": true
            },
            {
              "value1": "={{ $json.body.meta?.sender?.custom_attributes?.skipevaluation ?? false }}",
              "value2": true
            }
          ]
        }
      },
      "id": "8495854e-3ec3-4a18-b742-ddb8a15d8ca6",
      "name": "Skip Evaluation By Contact",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1300,
        3500
      ]
    },
    {
      "parameters": {},
      "id": "bab7d93d-659e-4c4d-a6c1-c3585a5fe76f",
      "name": "Evaluation Message Payload Ready To Quepasa",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        160,
        3400
      ]
    },
    {
      "parameters": {
        "jsCode": "function hex2a(hexx) {\n    var hex = hexx.toString(); //force conversion\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\n\nfor(let index in items) \n{ \n    if(items[index].json?.chatid){\n        continue;\n    }\n\n    let body = items[index].json[\"body\"];\n    if(body) \n    {\n        // trying to get from external identifier\n        let chatid = body.meta?.sender?.identifier;\n        if(!chatid)\n        {\n            // trying to get from quepasa custom property\n            chatid = body.meta?.sender?.custom_attributes?.quepasa;            \n            if(!chatid)\n            {\n                // trying to get from e-mail\n                chatid = body.meta?.sender?.email;            \n                if(!chatid)\n                {\n                    // trying to unhex from source_id\n                    if(body.contact_inbox?.source_id && body.contact_inbox.source_id.includes(\"@\")){\n                        chatid = hex2a(body.contact_inbox.source_id)\n                    }\n                    \n                    if(!chatid)\n                    {                    \n                        // trying to get from phone number\n                        chatid = body.meta?.sender?.phone_number;\n                    }\n                }\n            }\n        }\n        items[index].json.chatid = chatid;\n    }\n}\n\nreturn items;"
      },
      "id": "813ab8ab-9b42-4970-9e18-d51d62599e85",
      "name": "Getting ChatId From Custom|Email|Source|Phone",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -2740,
        3880
      ]
    },
    {
      "parameters": {},
      "name": "Post Resolved Message",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2680,
        3540
      ],
      "id": "7aa4802e-a455-4063-aedc-b771509b0a9d"
    },
    {
      "parameters": {
        "jsCode": "const response = [];\n\nfunction hex2a(hexx) {\n    var hex = hexx.toString(); //force conversion\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2)\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    return str;\n}\n\nfor (const item of $input.all()) {\n  const body = item.json.body;\n  if(body) {     \n    let chatId = body.conversation.meta?.sender?.identifier;    \n    if(!chatId)\n    {\n      chatId = body.conversation.meta?.sender?.custom_attributes?.quepasa;\n      if(!chatId){\n        chatId = body.conversation.meta?.sender?.phone_number;\n        if(!chatId){\n          let chatIdEncrypted = body.conversation.contact_inbox.source_id;\n          chatId = hex2a(chatIdEncrypted)\n        }\n      }\n    }\n\n    // attachments\n    for(let message of body.conversation.messages) \n    {  \n      if(message.content){\n\n        // leading with \\ at SHIFT+ENTER\n        message.content = message.content.replace(/\\n\\\\/g,\"\\n\").replace(/ \\\\/g,\"\");\n\n        const payload = {        \n          token: item.json.query.token,\n          chatid: chatId,\n          messageid: message.id,\n          \n          // dont used for nothing, marked for remove\n          sourceid: body.conversation.contact_inbox.source_id,\n          \n          conversationid: body.conversation.id,\n          content: message.content,\n          sender: message.sender?.available_name || message.sender?.name || 'Auto Atendimento'\n        };\n        const msgItem = { \n          payload: payload,\n          query: item.json.query\n        };\n        response.push(msgItem);\n      }\n\n      if(message.attachments){\n        for(let attach of message.attachments) \n        {\n          const payload = {\n            token: item.json.query.token,\n            chatid: chatId,\n            messageid: message.id,          \n            attachment: attach.data_url\n          };\n          const msgItem = { \n            payload: payload,\n            query: item.json.query\n          };\n          response.push(msgItem);\n        }\n      }      \n    }\n  }\n}\n\nreturn response;"
      },
      "id": "c3876a03-57f4-47b4-8c18-fbca320f0f80",
      "name": "Payload",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -1000,
        2720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.conversation?.meta.sender.identifier?.toLowerCase() }}",
              "value2": "control@quepasa.io"
            },
            {
              "value1": "={{ $json.body.meta?.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            },
            {
              "value1": "={{ $json.body.conversation?.meta.sender.name?.toLowerCase() }}",
              "operation": "contains",
              "value2": "quepasa control"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "1c6cef50-944c-4385-ba1b-737d6c708a55",
      "name": "From Quepasa Control ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1300,
        2700
      ]
    },
    {
      "parameters": {
        "baseUrl": "={{$json.query.qphost}}",
        "token": "={{$json.query.qptoken}}",
        "operation": "revoke",
        "messageId": "={{ $json.query.account }}-{{ $json.query.inbox }}-{{ $json.body.id }}"
      },
      "id": "fac5dfc5-db6c-462b-b4c4-61e66b590322",
      "name": "Quepasa Revoke",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        -1780,
        4520
      ],
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "payload.chatid",
              "value": "={{ $json.body.meta.sender.identifier }}"
            },
            {
              "name": "payload.messageid",
              "value": "={{ $json.body.messages[0].id }}"
            },
            {
              "name": "query.qphost",
              "value": "={{ $json.query.qphost }}"
            },
            {
              "name": "query.qptoken",
              "value": "={{ $json.query.qptoken }}"
            },
            {
              "name": "query.account",
              "value": "={{ $json.query.account }}"
            },
            {
              "name": "query.inbox",
              "value": "={{ $json.query.inbox }}"
            },
            {
              "name": "payload.content",
              "value": "=*{{ $json[\"body\"][\"meta\"][\"sender\"][\"name\"] }}* seu atendimento de Ticket de nº *{{ $json[\"body\"][\"messages\"][0][\"conversation_id\"] }}* foi finalizado ! Caso tenha alguma dúvida só enviar uma nova mensagem !\n\nAproveite e avalie nosso atendimento. Sua opinião é muito importante para nós e nos ajudará a identificar áreas de melhorias e continuar oferecendo um serviço de qualidade. 😎\n\nAvalie meu atendimento !\n{{ ($json.query.cwpublic ?? $json.query.cwhost).trimEnd('/') }}/survey/responses/{{ $json[\"uuid\"] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dd874cde-97ba-47fc-ba98-94c7056a4367",
      "name": "Payload With CSAT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -40,
        3300
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "query.qphost",
              "value": "={{ $json.query.qphost }}"
            },
            {
              "name": "query.qptoken",
              "value": "={{ $json.query.qptoken }}"
            },
            {
              "name": "query.account",
              "value": "={{ $json.query.account }}"
            },
            {
              "name": "query.inbox",
              "value": "={{ $json.query.inbox }}"
            },
            {
              "name": "payload.chatid",
              "value": "={{ $json.body.meta.sender.identifier }}"
            },
            {
              "name": "payload.messageid",
              "value": "={{ $json.body.messages[0].id }}"
            },
            {
              "name": "payload.content",
              "value": "-----------------------------------------------------\nSeu atendimento foi marcado como *concluído* !\nQualquer mensagem ou reação após este anúncio, irá iniciar uma *nova* conversa.\n-----------------------------------------------------"
            }
          ]
        },
        "options": {}
      },
      "id": "ab79bea9-1b69-4555-a7a5-6fa2ea8f98b4",
      "name": "Payload Without CSAT",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -40,
        3460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT account_id FROM inboxes WHERE id = '{{ $json.query.inbox }}'",
        "additionalFields": {}
      },
      "id": "ac9acc90-28bf-4867-a29c-bc71bcd2ea9e",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -1940,
        3540
      ],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{query.account}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "cd643c2c-2015-4c0c-9407-470008579bb4",
      "name": "Account Found ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2140,
        3420
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "query.account",
              "value": "={{ $json.account_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d24a832f-7064-48c0-a134-b868cb0589c5",
      "name": "Set Account in Query",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1780,
        3540
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "b803bb7f-985b-42cb-9768-5aa4b6219c6f",
      "name": "Merge Account Id",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -1620,
        3460
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "From ChatWoot": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Content With Sender Name": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Message Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Status Changed  Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Conversation Created Event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Created Event": {
      "main": [
        [
          {
            "node": "Is Outgoing Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Message ?": {
      "main": [
        [
          {
            "node": "If Control Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Created Event": {
      "main": [
        [
          {
            "node": "Sent by agent ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Text": {
      "main": [
        [
          {
            "node": "Normal Exit (RAS)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Send Attach": {
      "main": [
        [
          {
            "node": "Normal Exit (RAS)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Only ?": {
      "main": [
        [
          {
            "node": "Quepasa Send Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Quepasa Send Attach",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Outgoing Message ?": {
      "main": [
        [
          {
            "node": "Is Public ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Incoming !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Public ?": {
      "main": [
        [
          {
            "node": "Is Not From Sincronize Bot?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Private !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Not From Sincronize Bot?": {
      "main": [
        [
          {
            "node": "From Quepasa Control ?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "From Customer !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Control Message": {
      "main": [
        [
          {
            "node": "Quepasa Chat Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Content With Sender Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Chat Control Workflow": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sent by agent ?": {
      "main": [
        [
          {
            "node": "Open Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Open Conversation": {
      "main": [
        [
          {
            "node": "Normal Exit (GNE)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Message Update Event",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Not Message Created Event !",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Update Event": {
      "main": [
        [
          {
            "node": "If Deleted ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Deleted ?": {
      "main": [
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Quepasa Send Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Text Only ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Throw To Profile Update Workflow": {
      "main": [
        [
          {
            "node": "Normal Exit (CUP)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enabled CSAT ?": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Payload With CSAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Use CSAT ?": {
      "main": [
        [
          {
            "node": "Getting UUID",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "Payload Without CSAT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Use CSAT ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Conversation Resolved": {
      "main": [
        [
          {
            "node": "If Not Control",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Update Contact Payload": {
      "main": [
        [
          {
            "node": "Throw To Profile Update Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Conversation Status Changed  Event": {
      "main": [
        [
          {
            "node": "Getting ChatId From Custom|Email|Source|Phone",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post Resolved Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Control": {
      "main": [
        [
          {
            "node": "Account Found ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting UUID": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluate By Conversation Is Setted": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Skip Evaluation By Contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluate By Conversation": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Enabled CSAT ?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Skip Evaluation By Contact": {
      "main": [
        [],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evaluation Message Payload Ready To Quepasa": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Getting ChatId From Custom|Email|Source|Phone": {
      "main": [
        [
          {
            "node": "Set Update Contact Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Resolved Message": {
      "main": [
        [
          {
            "node": "If Conversation Resolved",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload": {
      "main": [
        [
          {
            "node": "Text Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From Quepasa Control ?": {
      "main": [
        [
          {
            "node": "Throw To Quepasa Inbox Control Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Payload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "NoOp": {
      "main": [
        [
          {
            "node": "Quepasa Revoke",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload With CSAT": {
      "main": [
        [
          {
            "node": "Evaluation Message Payload Ready To Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Payload Without CSAT": {
      "main": [
        [
          {
            "node": "Evaluation Message Payload Ready To Quepasa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Account Found ?": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation Is Setted",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Set Account in Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Account in Query": {
      "main": [
        [
          {
            "node": "Merge Account Id",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Account Id": {
      "main": [
        [
          {
            "node": "Skip Evaluate By Conversation Is Setted",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 30
  },
  "versionId": "8e162179-8e8a-40d4-98af-e9fa56995926",
  "id": "2",
  "meta": {
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "tags": [
    {
      "createdAt": "2022-10-13T04:02:06.783Z",
      "updatedAt": "2022-10-13T04:02:06.783Z",
      "id": "1",
      "name": "SUFFICIT"
    }
  ]
}