{
  "name": "PostToChatwoot",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.participant?.title}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "name": "Direct Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2220,
        900
      ],
      "id": "6af41726-dedf-4662-a464-1c19bb71be40"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "=**{{$json.participant.title}}**: {{$json.payload.content}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Prepend Title",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -2020,
        960
      ],
      "id": "4cc64138-d2f9-4419-95a6-a8a2bee9a464"
    },
    {
      "parameters": {
        "baseUrl": "={{$json.extra.qphost}}",
        "token": "={{$json.extra.qptoken}}",
        "operation": "download",
        "messageId": "={{ $json.payload.content_attributes?.items?.quepasa?.msgid ?? $json.payload.echo_id }}",
        "fileName": "={{$json.attachment.filename}}"
      },
      "id": "1df2c4ba-bbe1-456e-bf4f-924fd3c11234",
      "name": "Quepasa Download Incoming",
      "type": "n8n-nodes-quepasa.quepasa",
      "typeVersion": 1,
      "position": [
        -1420,
        700
      ],
      "continueOnFail": true
    },
    {
      "parameters": {},
      "id": "1dfb57e8-1144-4ce5-9915-310df19a74da",
      "name": "When Called By Another Workflow",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -3300,
        760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.attachment}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "name": "Has Incoming Attachment",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1820,
        880
      ],
      "id": "0af31fae-f50e-469b-83d0-77d80f4e72fc"
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "643e5a7b-880f-4c6a-b5af-8321efcb14fe",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        -1240,
        780
      ]
    },
    {
      "parameters": {},
      "id": "6f7ebcfb-46ec-42ab-bfda-708cb461b35d",
      "name": "(In) Attachment",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1620,
        800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.error}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "701bbf41-8d10-4f9a-b1b4-9d249464925b",
      "name": "(In) Error On Get Attach ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1060,
        780
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "! \"Algum EMOJI\" | \"Alguma Reação que o sistema não entende ainda ..\""
            }
          ]
        },
        "options": {}
      },
      "id": "d4a3eabf-64cb-440b-9726-dc95bea29f97",
      "name": "Set Custom Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -1420,
        1060
      ]
    },
    {
      "parameters": {
        "content": "## Fail Retry \nImportant to retry on fail because if you are using any external storage, it will try to save at this time.\nSo you need to ensure success ...",
        "height": 347.0509255000625,
        "width": 258.1602840291324
      },
      "id": "4ba9936e-8bf4-43f6-bccd-ead5f5655b8f",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2120,
        1380
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "extra.qphost",
              "value": "={{ $json.extra.qphost ?? \"http://127.0.0.1:31000\" }}"
            },
            {
              "name": "extra.cwhost",
              "value": "={{ $json.extra.cwhost ?? \"http://127.0.0.1:3000\" }}"
            },
            {
              "name": "extra.qptoken",
              "value": "={{ $json.extra.qptoken ?? $json.extra.identifier }}"
            }
          ]
        },
        "options": {}
      },
      "id": "49e61152-1b3a-4ecf-ac96-c8fc7b9930c7",
      "name": "Defaults",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -3140,
        760
      ]
    },
    {
      "parameters": {
        "content": "## (1.0.15) Updates\n* issue at msg with attachment and empty content\n\n## Recommendations \n* Remember set timeout to 10 seconds",
        "height": 189.357048321488,
        "width": 489.8474320052134
      },
      "id": "5c00d5f6-1dbb-4218-8a8e-8853fd826635",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3380,
        549.8812688918849
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.synopsis }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "8aee394f-9bc7-443b-897a-e52efd53c8ee",
      "name": "If InReply | Reaction ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2600,
        880
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ $json.payload.content_attributes.in_reply_to.split('-')[2] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "85488b5d-07f1-4303-aaa4-06028970836f",
      "name": "Prepend Reference",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -2420,
        800
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{ $json.extra.cwhost }}/api/v1/accounts/{{ $json.extra.account }}/conversations/{{ $json.conversation.id }}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{ $json.payload }}",
        "headerParametersJson": "={ \"api_access_token\": \"{{ $json.extra.atoken }}\" }"
      },
      "name": "Send Edited Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -2060,
        620
      ],
      "id": "943ba096-84d6-4793-9b53-d856db56a478",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.conversation.id}}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {
          "bodyContentType": "multipart-form-data"
        },
        "sendBinaryData": true,
        "binaryPropertyName": "attachments[]:data",
        "headerParametersJson": "={ \"api_access_token\": \"{{$json.extra.atoken}}\" }",
        "queryParametersJson": "={{$json.payload}}"
      },
      "name": "Post Incoming Message Attachment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        2420,
        1560
      ],
      "id": "4ebd53bb-6850-419e-a7b1-2e5f336b0a88",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "mode": "jsonToBinary",
        "convertAllData": false,
        "sourceKey": "attachment.thumbnail",
        "options": {
          "dataIsBase64": true,
          "fileName": "={{ $json.attachment.filename }}",
          "mimeType": "image/jpeg"
        }
      },
      "id": "90dd520a-e244-4878-957b-eeaa8911fea5",
      "name": "Move Binary Data",
      "type": "n8n-nodes-base.moveBinaryData",
      "typeVersion": 1,
      "position": [
        1380,
        1440
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $input.item.binary[\"data\"].data;\nconst text = Buffer.from(data, 'base64').toString();\n\nconst vcard = {};\nvcard.text = text;\n\n// split the string on \\n or \\r characters\nconst lines = text.match(/[^\\r\\n]+/g);\n\nconst fn = lines.find(element => element.startsWith(\"FN:\"));\nif (fn) {\n  vcard.fn = fn.substring(3);\n}\n\nconst items = [];\n\nfunction HandlerPhone(item, phoneline){\n  // getting phone\n    item.phone = phoneline.split(\":\").pop();\n    if (item.phone) {\n      item.phone = item.phone.replace(/\\D/g, \"\");\n      if (item.phone.length === 0) item.phone = undefined;\n    }\n    \n    // getting phone old method\n    item.phone_old = phoneline.split('TEL')[1]?.split(':')[0]?.split('waid=')[1];\n    if (item.phone_old) {\n      item.phone_old = item.phone_old.replace(/\\D/g, \"\");\n      if (item.phone_old.length === 0) item.phone_old = undefined;\n    }\n    \n    // getting whatsapp id\n    const waidindex = phoneline.indexOf(\"waid=\");\n    if (waidindex > -1) {\n      item.waid = phoneline.substring(waidindex + 5).split(':')[0];\n      if (item.waid) {\n        item.waid = item.waid.replace(/\\D/g, \"\");\n        if (item.waid.length === 0) item.waid = undefined;\n      }\n    }    \n}\n\nfunction ForEachItem(element, index, array) {\n  element = element.substring(4);\n  const itemindex = element.split('.')[0];    \n  const telprefix = itemindex + \".TEL;\";\n  if (element.startsWith(telprefix)) {\n    element = element.substring(5);\n    \n    let item = items.find(s => s.index == itemindex);\n    if (!item) { item = { index: itemindex }; items.push(item); }\n\n    HandlerPhone(item, element);\n  }    \n}\n\nfunction ForEachTEL(element, index, array) {\n  element = element.substring(4);  \n    \n  const item = {}; \n  items.push(item);\n\n  HandlerPhone(item, element);  \n}\n\nconst itemlines = lines.filter(element => element.startsWith(\"item\"));\nitemlines.forEach(ForEachItem);\n\nconst tellines = lines.filter(element => element.startsWith(\"TEL;\"));\ntellines.forEach(ForEachTEL);\n\nvcard.items = items;\n\nif (vcard.items.length > 0) {\n  // setting default phone\n  vcard.phone = vcard.items[0].waid ?? vcard.items[0].phone ?? vcard.items[0].phone_old;\n}\n\n$input.item.json.vcard = vcard;\n\nreturn $input.item;"
      },
      "id": "81eeb5d6-981f-42df-97db-dd8cd7ca27eb",
      "name": "Get vCard Infos",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1000,
        1060
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.conversation.id}}/messages",
        "allowUnauthorizedCerts": true,
        "options": {},
        "bodyParametersUi": {
          "parameter": [
            {
              "name": "message_type",
              "value": "={{ 2 }}"
            },
            {
              "name": "content",
              "value": "={{ $json.import.message }}"
            }
          ]
        },
        "headerParametersUi": {
          "parameter": [
            {
              "name": "api_access_token",
              "value": "={{ $json.extra.utoken }}"
            }
          ]
        }
      },
      "name": "Post Success Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        3240,
        1040
      ],
      "id": "741bdae9-353f-4da0-8444-7f5ce9e3865c",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT messages.id as internal_id\nFROM messages INNER JOIN conversations \nON messages.conversation_id = conversations.id\nWHERE messages.account_id = '{{ $json.extra.account }}' AND messages.source_id = '{{ $json.payload.source_id }}' ORDER BY messages.id DESC LIMIT 1;\n",
        "options": {}
      },
      "id": "01daa873-695a-4769-bece-35a4c31304eb",
      "name": "Get Edited Message Id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -2580,
        540
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.payload.edited }}",
              "value2": true
            }
          ]
        }
      },
      "id": "53594592-9664-4bec-9a88-f9f8278c5381",
      "name": "If Edited Message ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2980,
        760
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/conversations/{{$json.conversation.id}}/messages",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{$json.payload}}",
        "headerParametersJson": "={ \"api_access_token\": \"{{$json.extra.atoken}}\" }"
      },
      "name": "Post Incoming Message Without Attachment",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        1640,
        860
      ],
      "id": "2f0a55d2-bc66-432d-b63b-55e10b63e78e",
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ $binary[\"data\"].fileExtension }}",
        "rules": {
          "rules": [
            {
              "value2": "vcf"
            },
            {
              "value2": "url",
              "output": 1
            }
          ]
        },
        "fallbackOutput": 3
      },
      "id": "0b4646b0-5320-4c0e-916f-c50dd929098e",
      "name": "Switch By Extension",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [
        -220,
        1060
      ]
    },
    {
      "parameters": {},
      "id": "8619a287-494d-4a80-a1e4-89b0c7e54e76",
      "name": "Extension .url",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        760,
        1500
      ]
    },
    {
      "parameters": {},
      "id": "902e310d-4df1-448b-a6e9-4c86640349ae",
      "name": "Extension .vcf",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        760,
        1060
      ]
    },
    {
      "parameters": {},
      "id": "2ca4038e-261e-4c4e-a220-f9d09e408e34",
      "name": "Any Other Extensions",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        760,
        1800
      ]
    },
    {
      "parameters": {},
      "id": "e1b7d4d3-52b2-44e8-9549-4f3e07119a7c",
      "name": "Insert Contact Into Chatwoot",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1640,
        1060
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "e3f0f829-3514-4ca4-92cc-0e0f5a384af2",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        3020,
        1040
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "4b9132ca-f4ad-4c58-bdb0-dc541a477e9b",
      "name": "If Insert Contact Error",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2120,
        940
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.error.message }}",
              "operation": "contains",
              "value2": "has already been taken"
            }
          ]
        }
      },
      "id": "150cac36-cc4b-49b3-846a-51fa197acd51",
      "name": "If Already Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2300,
        800
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "import.message",
              "value": "✅ Contato já existe"
            }
          ]
        },
        "options": {}
      },
      "id": "baaf117f-42df-4356-8050-95970e137e0f",
      "name": "Set Success For Already Exists",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2540,
        660
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "import.message",
              "value": "✅ Contato importado com sucesso"
            }
          ]
        },
        "options": {}
      },
      "id": "88f1d89a-e910-4641-8d27-17a76dc435fe",
      "name": "Set Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2540,
        960
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "import.message",
              "value": "=Falha na importação: {{ $json.error.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5fa8b8a4-19cd-4cbe-a90f-f13548d69921",
      "name": "Set Fail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2540,
        820
      ]
    },
    {
      "parameters": {},
      "id": "41a13d9a-07d6-4bf1-a9b2-3b6e98235ef5",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2820,
        820
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "=**Nome:** {{ $json.vcard.fn }}\n**Telefone:** {{ $json.vcard.phone }}\n"
            }
          ]
        },
        "options": {}
      },
      "id": "a990a052-793d-4db5-aa58-b7ff0394bbe4",
      "name": "Adjust Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1220,
        1060
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "=**Localização:** \n{{ $json.attachment.url }}"
            }
          ]
        },
        "options": {}
      },
      "id": "33c5378a-afa4-470e-840b-f59ea84e3855",
      "name": "Override Default Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        980,
        1500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.attachment.thumbnail }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "4700fa46-d22c-452e-8c07-0bfa70fe84c4",
      "name": "If Has Thumbnail",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1200,
        1500
      ]
    },
    {
      "parameters": {},
      "id": "af397c49-bde1-4e81-b81f-e5a7ba81f73d",
      "name": "(Localization) Follow and Post",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1540,
        1520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$binary}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "0192d118-0916-43ad-8c64-04a345a5a3c5",
      "name": "Post Incomming Text Only ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -420,
        960
      ],
      "retryOnFail": true,
      "waitBetweenTries": 2000
    },
    {
      "parameters": {},
      "id": "43c51894-cbb1-4ef1-8b7b-08a56cd2d103",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -220,
        880
      ]
    },
    {
      "parameters": {},
      "id": "ac9b8adf-3109-4f2f-9b9b-380c6c011de5",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1000,
        1220
      ]
    },
    {
      "parameters": {},
      "id": "a936e5e6-510e-477d-b90b-63d055450468",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2780,
        640
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "613fc6e0-b244-4aa3-811e-2975f8973dad",
      "name": "Merge Edited Message Info",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -2380,
        620
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "=⚠️ ***Essa mensagem foi editada !***\n -------------------------------------\n{{ $json.payload.content }}"
            },
            {
              "name": "payload.content_attributes.in_reply_to_external_id",
              "value": "={{ $json.payload.source_id }}"
            }
          ],
          "number": [
            {
              "name": "payload.content_attributes.in_reply_to",
              "value": "={{ +$json.internal_id }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6468f521-2e2a-42bc-8b42-4697f8eedb7e",
      "name": "Prepend Edited Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -2220,
        620
      ]
    },
    {
      "parameters": {},
      "id": "839e4c90-46b3-4247-96c2-3349bd32fe6a",
      "name": "No Operation, do nothing4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -2780,
        880
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{$json.extra.cwhost}}/api/v1/accounts/{{$json.extra.account}}/contacts",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "api_access_token",
              "value": "={{ $json.extra.utoken }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "name",
              "value": "={{ $json.vcard.fn }}"
            },
            {
              "name": "phone_number",
              "value": "=+{{ $json.vcard.phone }}"
            },
            {
              "name": "identifier",
              "value": "={{ $json.vcard.phone }}@s.whatsapp.net"
            }
          ]
        },
        "options": {}
      },
      "id": "a5520172-c12d-4a6f-9f3c-2cb72cc9a97b",
      "name": "Try to Add Contact On Chatwoot",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1900,
        940
      ],
      "alwaysOutputData": true,
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "66121feb-764c-447c-ab13-1be9e5bafd75",
      "name": "No Operation, do nothing5",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1220,
        960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.payload.content}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "c9b004f0-2d72-4fd1-90c7-9066eb51cffb",
      "name": "If Not Empty Content ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -1620,
        980
      ]
    },
    {
      "parameters": {},
      "id": "00b65302-ec5e-4e85-9bad-726222760ebc",
      "name": "(In) Text Message Following With Attachment",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -680,
        800
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "payload.content",
              "value": "= ** Falha ao baixar anexo ! :: => {{ $json[\"attachment\"][\"filename\"] }}\n------------------------\nerror: {{ $json.error }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b71393b4-a75d-45e5-ac16-168db47123cc",
      "name": "(In) Prepend error on content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        -860,
        700
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Direct Message ?": {
      "main": [
        [
          {
            "node": "Has Incoming Attachment",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepend Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepend Title": {
      "main": [
        [
          {
            "node": "Has Incoming Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quepasa Download Incoming": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Called By Another Workflow": {
      "main": [
        [
          {
            "node": "Defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Has Incoming Attachment": {
      "main": [
        [
          {
            "node": "(In) Attachment",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If Not Empty Content ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "(In) Error On Get Attach ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Attachment": {
      "main": [
        [
          {
            "node": "Quepasa Download Incoming",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "(In) Error On Get Attach ?": {
      "main": [
        [
          {
            "node": "(In) Prepend error on content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "(In) Text Message Following With Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Custom Content": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Defaults": {
      "main": [
        [
          {
            "node": "If Edited Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If InReply | Reaction ?": {
      "main": [
        [
          {
            "node": "Prepend Reference",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Direct Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepend Reference": {
      "main": [
        [
          {
            "node": "Direct Message ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move Binary Data": {
      "main": [
        [
          {
            "node": "(Localization) Follow and Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get vCard Infos": {
      "main": [
        [
          {
            "node": "Adjust Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Edited Message Id": {
      "main": [
        [
          {
            "node": "Merge Edited Message Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Edited Message ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch By Extension": {
      "main": [
        [
          {
            "node": "Extension .vcf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extension .url",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "Any Other Extensions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extension .url": {
      "main": [
        [
          {
            "node": "Override Default Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extension .vcf": {
      "main": [
        [
          {
            "node": "Get vCard Infos",
            "type": "main",
            "index": 0
          },
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Any Other Extensions": {
      "main": [
        [
          {
            "node": "Post Incoming Message Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Contact Into Chatwoot": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          },
          {
            "node": "Try to Add Contact On Chatwoot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Post Success Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Insert Contact Error": {
      "main": [
        [
          {
            "node": "If Already Exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Already Exists": {
      "main": [
        [
          {
            "node": "Set Success For Already Exists",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Fail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Success For Already Exists": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Success": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Fail": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adjust Content": {
      "main": [
        [
          {
            "node": "Insert Contact Into Chatwoot",
            "type": "main",
            "index": 0
          },
          {
            "node": "Post Incoming Message Without Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Override Default Content": {
      "main": [
        [
          {
            "node": "If Has Thumbnail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Has Thumbnail": {
      "main": [
        [
          {
            "node": "Move Binary Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "(Localization) Follow and Post",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(Localization) Follow and Post": {
      "main": [
        [
          {
            "node": "Post Incoming Message Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Post Incomming Text Only ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Switch By Extension",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Post Incoming Message Without Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "Post Incoming Message Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing3": {
      "main": [
        [
          {
            "node": "Get Edited Message Id",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Edited Message Info",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge Edited Message Info": {
      "main": [
        [
          {
            "node": "Prepend Edited Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepend Edited Content": {
      "main": [
        [
          {
            "node": "Send Edited Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing4": {
      "main": [
        [
          {
            "node": "If InReply | Reaction ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Try to Add Contact On Chatwoot": {
      "main": [
        [
          {
            "node": "If Insert Contact Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing5": {
      "main": [
        [
          {
            "node": "Post Incomming Text Only ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Not Empty Content ?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set Custom Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Text Message Following With Attachment": {
      "main": [
        [
          {
            "node": "Post Incomming Text Only ?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "(In) Prepend error on content": {
      "main": [
        [
          {
            "node": "(In) Text Message Following With Attachment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "saveManualExecutions": false,
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 10
  },
  "versionId": "51b207b3-3ebb-4291-b0c7-b88ed0ef22b4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2b4ab318d4f8eba20155e50db9998481bc305e3588e42ee69176091736c9d07e"
  },
  "id": "1006",
  "tags": [
    {
      "createdAt": "2022-10-13T15:26:19.857Z",
      "updatedAt": "2023-08-24T21:01:00.296Z",
      "id": "6",
      "name": "chatwoot"
    },
    {
      "createdAt": "2023-05-19T22:54:38.266Z",
      "updatedAt": "2023-05-19T22:54:38.266Z",
      "id": "13",
      "name": "github.com/nocodeleaks"
    }
  ]
}